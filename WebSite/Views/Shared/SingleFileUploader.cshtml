<script type="text/x-template" id="SingleFileUploader">
    <div style="height:40px;">
        <div v-if="!isread">
            <div style="display:inline-block;
                    width:180px;overflow:hidden;height:42px;
                    line-height:42px;width:calc( 100% - 200px)">
                <el-progress :text-inside="true"
                             :stroke-width="18"
                             :percentage="percentage"
                             v-if="isUploading"
                             style="margin-top:10px;">
                </el-progress>
                <el-input v-else
                          :placeholder="placeholder"
                          :value="filename"
                          disabled
                          style="width:100%">
                </el-input>

            </div>
            <el-button type="primary" @@click="buttonClick" style="vertical-align:top;margin-top:2px;">{{buttonText}}</el-button>
            <el-button type="warning"
                       @@click="clearFile"
                       style="vertical-align:top;margin-top:2px;"
                       :disabled="canClear">清除</el-button>
        </div>
        <div v-else style="height:40px;line-height:40px;">
            <span class="SingleFileDownloader"
                  title="点击下载"
                  @@click="downloadFile" v-if="hasFile"><i class="el-icon-document"></i>{{filename}}</span>
            <span v-else>无文件</span>
        </div>
    </div>
</script>
<script>
    Vue.component('single-file-uploader', {
        props: {
            placeholder: {
                type: String,
                default: '请选择文件'
            },
            folderpath: {
                type: String,
                default: 'temp/file'
            },
            filename: {
                type: String,
                default: ''
            },
            filepath: {
                type: String,
                default: ''
            },
            accept: {
                type: String,
                default: ''
            },
            action: {
                type: String,
                default: '/Base/CommonUploadFile'
            },
            isread: {
                type: Boolean,
                default: false
            }
        },
        data: function () {
            return {
                percentage: 0,
                isUploading: false,
                uploadControl: null,
                uploadCancleToken: null
            };
        },
        methods: {
            buttonClick: function () {
                if (!this.isUploading) {
                    var $self = this;
                    var input = document.createElement("input");
                    input.type = "file";
                    input.onchange = function () {
                        if (input.files != null && input.files[0] != null) {
                            $self.isUploading = true;
                            var param = new FormData();
                            param.append('file', input.files[0]);
                            param.append("path", $self.folderpath);
                            var CancelToken = axios.CancelToken;
                            var config = {
                                headers: {
                                    'Content-Type': 'multipart/form-data'
                                },
                                cancelToken: new CancelToken(function (c) {
                                    $self.uploadCancleToken = c;
                                }),
                                onUploadProgress: function (progressEvent) {
                                    $self.percentage = parseInt(progressEvent.loaded / progressEvent.total * 100);
                                }
                            };
                            axios.post($self.action, param, config)
                                .then(function (response) {
                                    $self.isUploading = false;
                                    $self.$emit('update:filepath', response.data.msg);
                                    $self.$emit('update:filename', input.files[0].name);
                                    input.remove();
                                }).catch(function (err) {
                                    if (!axios.isCancel(err)) {
                                        $Msg.error("服务器出错");
                                        $self.isUploading = false;
                                        if ($self.uploadControl != null) {
                                            $self.uploadControl.remove();
                                        }
                                        $self.percentage = 0;
                                        $self.uploadCancleToken = null;
                                    }
                                });
                        }
                    }
                    if (this.accept != "") {
                        input.accept = this.accept;
                    }
                    input.click();
                    this.uploadControl = input;
                }
                else {
                    this.uploadCancleToken();
                    if (this.uploadControl != null) {
                        this.uploadControl.remove();
                    }
                    this.isUploading = false;
                    this.percentage = 0;
                }
            },
            clearFile: function () {
                this.$emit('update:filepath', "");
                this.$emit('update:filename', "");
            },
            downloadFile: function () {
                window.open(encodeURI("/Base/CommonDownloadFile?path=" + this.filepath + "&fileName=" + this.filename));
            }
        },
        computed: {
            buttonText: function () {
                if (this.isUploading) {
                    return "取消上传";
                }
                else {
                    return "选择文件"
                }
            },
            canClear: function () {
                return this.isUploading || this.filename == '';
            },
            hasFile: function () {
                if (this.filepath == "" || this.filepath == null) {
                    return false;
                }
                return true;
            }
        },
        template: '#SingleFileUploader'
    })
</script>
<style>
    .SingleFileDownloader {
        padding-left:5px;
        cursor: pointer;
    }

        .SingleFileDownloader:hover {
            color: blue;
            text-decoration: underline;
        }
        .SingleFileDownloader i {
            margin-right:5px;
        }
</style>
